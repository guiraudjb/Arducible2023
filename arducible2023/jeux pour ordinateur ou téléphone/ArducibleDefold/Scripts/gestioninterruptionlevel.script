function init(self)
	msg.post(".", "acquire_input_focus")
	timeLeft=60
	ActiveKeyboard=true
	posInLevel =1
	oldLevel=1
	level=1
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
		if timeLeft > 0 then
		timeLeft = math.max(timeLeft - dt, 0)
		label.set_text("TimeLeftLabel#label", string.format("Time Left : %.1f", tostring(timeLeft)))
		label.set_text("ScoreLabel#label", string.format("SCORE : %.1f", tostring(score+timeLeft)))
		label.set_text("LevelLabel#label", "Level : "..level )
		getLevelParameters(level)
		cibleEnCour=levelTargets[posInLevel]
		ActiveBonusPos = levelTimeExtenderPositions[posInLevel]
		ActiveBonusValue = levelTimeExtenderValues[posInLevel]

	else
		msg.post("main:/loader#main", "changeScene", { newScene = "sceneEnding" })
	end

	
	--print("time left: "..self.timeLeft.." Level :"..level.." Position dans le niveau :"..posInLevel)
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)

--	if action_id == hash("escape") then
--		msg.post("@system:", "exit", {code = 0})
--	end
end
function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end


function getLevelParameters(self)
	if level == 1 then
		levelTargets = {3,2,1}
		levelTimeExtenderValues={4,0,0}
		levelTimeExtenderPositions={1,0,0}
	end
	if level == 2 then
		levelTargets = {2,3,1}
		levelTimeExtenderValues={1,0,0}
		levelTimeExtenderPositions={3,0,0}
	end
	if level == 3 then
		levelTargets = {1,3,2}
		levelTimeExtenderValues={3,0,0}
		levelTimeExtenderPositions={2,0,0}
	end
end


