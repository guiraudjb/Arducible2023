function init(self)
	animationPlaying=false

end
function final(self)
end

function update(self, dt)
	--print ("status du bonus"..bonusHitted)
	if bonusHitted == 0 then
		if ActiveBonusPos == 1 then
			--go.set_position(vmath.vector3(450,400,0))
			playanimation(ActiveBonusValue)
			rollingBonus(ActiveBonusPos)
		elseif ActiveBonusPos == 2 then
			--go.set_position(vmath.vector3(1060,400,0))
			playanimation(ActiveBonusValue)
			rollingBonus(ActiveBonusPos)
		elseif ActiveBonusPos == 3 then
			--go.set_position(vmath.vector3(1670,400,0))
			playanimation(ActiveBonusValue)
			rollingBonus(ActiveBonusPos)
		else 
			if animationPlaying==true then
				go.set_position(vmath.vector3(0,0,0))
				sprite.play_flipbook("#sprite", "blank")
				animationPlaying = false
			end

		end
	else
		sprite.play_flipbook("#sprite", "blank")
		animationPlaying = false	
	end
end

function playanimation(type)
	--print(type)
	--print(ActiveBonusPos)
	if animationPlaying==false then
		if type == 1 then
			sprite.play_flipbook("#sprite", "extending13", function() end)
		end
		if type == 2 then
			sprite.play_flipbook("#sprite", "extending23", function() end)
		end
		if type == 3 then
			sprite.play_flipbook("#sprite", "extending33", function() end)
		end
		if type == 4 then
			sprite.play_flipbook("#sprite", "extending43", function() end)
		end
		animationPlaying = true
	else

	end	
end

function removebBonus()
	sprite.play_flipbook("#sprite", "blank")
	animationPlaying = false
end

function rollingBonus(ActiveBonusPos)

	local bonuspos = go.get_position()
	local offset=610*(ActiveBonusPos-1)
	local deplacement=5
	local maxx=500+offset
	local minx=200+offset
	local deltax=(maxx-minx)/2
	local deltay=100
	local valy=200

	if bonuspos.x >= maxx then
		bonuspos.x = maxx
		bonuspos.z=0
			print("invert!")
		direction=-1
	
	end

	if bonuspos.x <= minx then
		bonuspos.x = minx
		bonuspos.z=1
		print("invert!")
		direction= 1

	end

	relx = (maxx - bonuspos.x - deltax)/deltax
	rely =  math.sqrt(1-( relx * relx))
	
	bonuspos.x = bonuspos.x + direction*(deplacement-2*rely+0.1)

	print("posx") 
	print(bonuspos.x)
	print(relx)
	
	bonuspos.y = valy + (rely* deltay) * direction
	go.set_scale(0.5+(rely/3))
	
	go.set_position(bonuspos)
end